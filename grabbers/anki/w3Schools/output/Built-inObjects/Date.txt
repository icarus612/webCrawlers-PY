<b>Date name</b>: <i>Date</i>.constructor | <b>Date name</b> that returns the function that created the date object's prototype. |  | <i>Date</i>.constructor | const d = new Date();<br/> let text = d.constructor; |  
<b>Date name</b>: <i>Date</i>.getDate() | <b>Date name</b> that returns the day of the month (from 1-31). |  | <i>Date</i>.getDate() | const d = new Date();<br/> let day = d.getDate(); |  
<b>Date name</b>: <i>Date</i>.getDay() | <b>Date name</b> that returns the day of the week (from 0-6). |  | <i>Date</i>.getDay() | const d = new Date();<br/> let day = d.getDay(); |  
<b>Date name</b>: <i>Date</i>.getFullYear() | <b>Date name</b> that returns the year. |  | <i>Date</i>.getFullYear() | const d = new Date();<br/> let year = d.getFullYear(); |  
<b>Date name</b>: <i>Date</i>.getHours() | <b>Date name</b> that returns the hour (from 0-23). |  | <i>Date</i>.getHours() | const d = new Date();<br/> let hour = d.getHours(); |  
<b>Date name</b>: <i>Date</i>.getMilliseconds() | <b>Date name</b> that returns the milliseconds (from 0-999). |  | <i>Date</i>.getMilliseconds() | const d = new Date();<br/> let ms = d.getMilliseconds(); |  
<b>Date name</b>: <i>Date</i>.getMinutes() | <b>Date name</b> that returns the minutes (from 0-59). |  | <i>Date</i>.getMinutes() | const d = new Date();<br/> let minutes = d.getMinutes(); |  
<b>Date name</b>: <i>Date</i>.getMonth() | <b>Date name</b> that returns the month (from 0-11). |  | <i>Date</i>.getMonth() | const d = new Date();<br/> let month = d.getMonth(); |  
<b>Date name</b>: <i>Date</i>.getSeconds() | <b>Date name</b> that returns the seconds (from 0-59). |  | <i>Date</i>.getSeconds() | const d = new Date();<br/> let seconds = d.getSeconds(); |  
<b>Date name</b>: <i>Date</i>.getTime() | <b>Date name</b> that returns the number of milliseconds since midnight jan 1 1970, and a specified date. |  | <i>Date</i>.getTime() | const d = new Date();<br/> let time = d.getTime(); |  
<b>Date name</b>: <i>Date</i>.getTimezoneOffset() | <b>Date name</b> that returns the time difference between utc time and local time, in minutes. |  | <i>Date</i>.getTimezoneOffset() | const d = new Date();<br/> let diff = d.getTimezoneOffset();<br/> |  
<b>Date name</b>: <i>Date</i>.getUTCDate() | <b>Date name</b> that returns the day of the month, according to universal time (from 1-31). |  | <i>Date</i>.getUTCDate() | const d = new Date();<br/> let day = d.getUTCDate(); |  
<b>Date name</b>: <i>Date</i>.getUTCDay() | <b>Date name</b> that returns the day of the week, according to universal time (from 0-6). |  | <i>Date</i>.getUTCDay() | const d = new Date();<br/> let day = d.getUTCDay(); |  
<b>Date name</b>: <i>Date</i>.getUTCFullYear() | <b>Date name</b> that returns the year, according to universal time. |  | <i>Date</i>.getUTCFullYear() | const d = new Date();<br/> let year = d.getUTCFullYear(); |  
<b>Date name</b>: <i>Date</i>.getUTCHours() | <b>Date name</b> that returns the hour, according to universal time (from 0-23). |  | <i>Date</i>.getUTCHours() | const d = new Date();<br/> let hour = d.getUTCHours(); |  
<b>Date name</b>: <i>Date</i>.getUTCMilliseconds() | <b>Date name</b> that returns the milliseconds, according to universal time (from 0-999). |  | <i>Date</i>.getUTCMilliseconds() | const d = new Date();<br/> let ms = d.getUTCMilliseconds(); |  
<b>Date name</b>: <i>Date</i>.getUTCMinutes() | <b>Date name</b> that returns the minutes, according to universal time (from 0-59). |  | <i>Date</i>.getUTCMinutes() | const d = new Date();<br/> let minutes = d.getUTCMinutes(); |  
<b>Date name</b>: <i>Date</i>.getUTCMonth() | <b>Date name</b> that returns the month, according to universal time (from 0-11). |  | <i>Date</i>.getUTCMonth() | const d = new Date();<br/> let month = d.getUTCMonth(); |  
<b>Date name</b>: <i>Date</i>.getUTCSeconds() | <b>Date name</b> that returns the seconds, according to universal time (from 0-59). |  | <i>Date</i>.getUTCSeconds() | const d = new Date();<br/> let seconds = d.getUTCSeconds(); |  
<b>Date name</b>: <i>Date</i>.getFullYear() | <b>Date name</b> that deprecated. use the getfullyear() method instead. |  | <i>Date</i>.getFullYear() | const d = new Date();<br/> let year = d.getFullYear(); |  
<b>Date name</b>: Date.now() | <b>Date name</b> that returns the number of milliseconds since midnight jan 1, 1970. |  | Date.now() | let ms = Date.now(); |  
<b>Date name</b>: <em>Date</em>.parse(<em>datestring</em>) | <b>Date name</b> that parses a date string and returns the number of milliseconds since january 1, 1970. |  | <em>Date</em>.parse(<em>datestring</em>) | let ms = Date.parse("March 21, 2012"); |  
<b>Date name</b>: Date.prototype.<em>name </em>=<em> value</em> | <b>Date name</b> that allows you to add properties and methods to an object. |  | Date.prototype.<em>name </em>=<em> value</em> | Date.prototype.myMonth = function()<br/> {<br/> if (this.getMonth()==0) {return "January"};<br/> if (this.getMonth()==1) {return "February"};<br/> if (this.getMonth()==2) {return "March"};<br/> if (this.getMonth()==3) {return "April"};<br/> if (this.getMonth()==4) {return "May"};<br/> if (this.getMonth()==5) {return "June"};<br/> if (this.getMonth()==6) {return "July"};<br/> if (this.getMonth()==7) {return "August"};<br/> if (this.getMonth()==8) {return "September"};<br/> if (this.getMonth()==9) {return "October"};<br/> if (this.getMonth()==10) {return "November"};<br/> if (this.getMonth()==11) {return "December"};<br/> } |  
<b>Date name</b>: <i>Date</i>.setDate(<em>day</em>) | <b>Date name</b> that sets the day of the month of a date object. |  | <i>Date</i>.setDate(<em>day</em>) | const d = new Date();<br/> d.setDate(15); |  
<b>Date name</b>: <i>Date</i>.setFullYear(<em>year</em>,<em> month</em>,<em> day</em>) | <b>Date name</b> that sets the year of a date object. |  | <i>Date</i>.setFullYear(<em>year</em>,<em> month</em>,<em> day</em>) | const d = new Date();<br/> d.setFullYear(2020); |  
<b>Date name</b>: <em>Date</em>.setHours(<em>hour, min, sec, millisec</em>) | <b>Date name</b> that sets the hour of a date object. |  | <em>Date</em>.setHours(<em>hour, min, sec, millisec</em>) | const d = new Date();<br/> d.setHours(15); |  
<b>Date name</b>: <i>Date</i>.setMilliseconds(<em>millisec</em>) | <b>Date name</b> that sets the milliseconds of a date object. |  | <i>Date</i>.setMilliseconds(<em>millisec</em>) | const d = new Date();<br/> d.setMilliseconds(192);<br/> |  
<b>Date name</b>: <i>Date</i>.setMinutes(<em>min</em>,<em> sec</em>,<em> millisec</em>) | <b>Date name</b> that set the minutes of a date object. |  | <i>Date</i>.setMinutes(<em>min</em>,<em> sec</em>,<em> millisec</em>) | const d = new Date();<br/> d.setMinutes(17); |  
<b>Date name</b>: <i>Date</i>.setMonth(<em>month</em>,<em> day</em>) | <b>Date name</b> that sets the month of a date object. |  | <i>Date</i>.setMonth(<em>month</em>,<em> day</em>) | const d = new Date();<br/> d.setMonth(4); |  
<b>Date name</b>: <i>Date</i>.setSeconds(<em>sec</em>,<em> millisec</em>) | <b>Date name</b> that sets the seconds of a date object. |  | <i>Date</i>.setSeconds(<em>sec</em>,<em> millisec</em>) | const d = new Date();<br/> d.setSeconds(35); |  
<b>Date name</b>: <i>Date</i>.setTime(<em>millisec</em>) | <b>Date name</b> that sets a date to a specified number of milliseconds after/before january 1, 1970. |  | <i>Date</i>.setTime(<em>millisec</em>) | const d = new Date();<br/> d.setTime(1332403882588); |  
<b>Date name</b>: <i>Date</i>.setUTCDate(<em>day</em>) | <b>Date name</b> that sets the day of the month of a date object, according to universal time. |  | <i>Date</i>.setUTCDate(<em>day</em>) | const d = new Date();<br/> d.setUTCDate(15); |  
<b>Date name</b>: <i>Date</i>.setUTCFullYear(<em>year</em>,<em> month</em>,<em> day</em>) | <b>Date name</b> that sets the year of a date object, according to universal time. |  | <i>Date</i>.setUTCFullYear(<em>year</em>,<em> month</em>,<em> day</em>) | const d = new Date();<br/> d.setUTCFullYear(2015); |  
<b>Date name</b>: <i>Date</i>.setUTCHours(<em>hour</em>,<em> min</em>,<em> sec</em>,<em> millisec</em>) | <b>Date name</b> that sets the hour of a date object, according to universal time. |  | <i>Date</i>.setUTCHours(<em>hour</em>,<em> min</em>,<em> sec</em>,<em> millisec</em>) | const d = new Date();<br/> d.setUTCHours(15); |  
<b>Date name</b>: <i>Date</i>.setUTCMilliseconds(<em>millisec</em>) | <b>Date name</b> that sets the milliseconds of a date object, according to universal time. |  | <i>Date</i>.setUTCMilliseconds(<em>millisec</em>) | const d = new Date();<br/> d.setUTCMilliseconds(192);<br/> |  
<b>Date name</b>: <i>Date</i>.setUTCMinutes(<em>min</em>,<em> sec</em>,<em> millisec</em>) | <b>Date name</b> that set the minutes of a date object, according to universal time. |  | <i>Date</i>.setUTCMinutes(<em>min</em>,<em> sec</em>,<em> millisec</em>) | const d = new Date();<br/> d.setUTCMinutes(17); |  
<b>Date name</b>: <i>Date</i>.setUTCMonth(<em>month</em>,<em> day</em>) | <b>Date name</b> that sets the month of a date object, according to universal time. |  | <i>Date</i>.setUTCMonth(<em>month</em>,<em> day</em>) | const d = new Date();<br/> d.setUTCMonth(4); |  
<b>Date name</b>: <i>Date</i>.setUTCSeconds(<em>sec</em>,<em> millisec</em>) | <b>Date name</b> that set the seconds of a date object, according to universal time. |  | <i>Date</i>.setUTCSeconds(<em>sec</em>,<em> millisec</em>) | const d = new Date();<br/> d.setUTCSeconds(35); |  
<b>Date name</b>: <i>Date</i>.setFullYear(<em>year</em>,<em> month</em>,<em> day</em>) | <b>Date name</b> that deprecated. use the setfullyear() method instead. |  | <i>Date</i>.setFullYear(<em>year</em>,<em> month</em>,<em> day</em>) | const d = new Date();<br/> d.setFullYear(2020); |  
<b>Date name</b>: <i>Date</i>.toDateString() | <b>Date name</b> that converts the date portion of a date object into a readable string. |  | <i>Date</i>.toDateString() | const d = new Date();<br/> let text = d.toDateString(); |  
<b>Date name</b>: <i>Date</i>.toUTCString() | <b>Date name</b> that deprecated. use the toutcstring() method instead. |  | <i>Date</i>.toUTCString() | const d = new Date();<br/> let text = d.toUTCString(); |  
<b>Date name</b>: <i>Date</i>.toISOString() | <b>Date name</b> that returns the date as a string, using the iso standard. |  | <i>Date</i>.toISOString() | const d = new Date();<br/> let text = d.toISOString(); |  
<b>Date name</b>: <i>Date</i>.toJSON() | <b>Date name</b> that returns the date as a string, formatted as a json date. |  | <i>Date</i>.toJSON() | const d = new Date();<br/> let text = d.toJSON(); |  
<b>Date name</b>: <i>Date</i>.toLocaleDateString() | <b>Date name</b> that returns the date portion of a date object as a string, using locale conventions. |  | <i>Date</i>.toLocaleDateString() | const d = new Date();<br/> let text = d.toLocaleDateString(); |  
<b>Date name</b>: <i>Date</i>.toLocaleTimeString() | <b>Date name</b> that returns the time portion of a date object as a string, using locale conventions. |  | <i>Date</i>.toLocaleTimeString() | const d = new Date();<br/> let text = d.toLocaleTimeString(); |  
<b>Date name</b>: <i>Date</i>.toLocaleString(<em>locales</em>, <em>options</em>) | <b>Date name</b> that converts a date object to a string, using locale conventions. |  | <i>Date</i>.toLocaleString(<em>locales</em>, <em>options</em>) | const d = new Date();<br/> let text = d.toLocaleString(); |  
<b>Date name</b>: <i>Date</i>.toString() | <b>Date name</b> that converts a date object to a string. |  | <i>Date</i>.toString() | const d = new Date();<br/> let text = d.toString(); |  
<b>Date name</b>: <i>Date</i>.toTimeString() | <b>Date name</b> that converts the time portion of a date object to a string. |  | <i>Date</i>.toTimeString() | const d = new Date();<br/> let text = d.toTimeString(); |  
<b>Date name</b>: <i>Date</i>.toUTCString() | <b>Date name</b> that converts a date object to a string, according to universal time. |  | <i>Date</i>.toUTCString() | const d = new Date();<br/> let text = d.toUTCString(); |  
<b>Date name</b>: Date.UTC(<em>year</em>,<em> month</em>,<em> day</em>,<em> hours</em>,<em> minutes</em>,<em> seconds</em>,<em> millisec</em>) | <b>Date name</b> that returns the number of milliseconds in a date since midnight of january 1, 1970, according to utc time. |  | Date.UTC(<em>year</em>,<em> month</em>,<em> day</em>,<em> hours</em>,<em> minutes</em>,<em> seconds</em>,<em> millisec</em>) | let ms = Date.UTC(2020, 02, 30);<br/> |  
<b>Date name</b>: <i>Date</i>.valueOf() | <b>Date name</b> that returns the primitive value of a date object. |  | <i>Date</i>.valueOf() | const d = new Date();<br/> let ms = d.valueOf(); |  
