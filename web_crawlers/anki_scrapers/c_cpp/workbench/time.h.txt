<b>Time Function:</b> char *asctime(const struct tm *<i>time</i>); | <b>Time function</b> used to converts the time that is stored as a structure to a character string. 
<b>Time Function:</b> char *asctime_r (const struct tm *tm, char *buf); | <b>Time function</b> used to converts tm that is stored as a structure to a character string. (Restartable version of asctime.) 
<b>Time Function:</b> clock_t clock(void); | <b>Time function</b> used to returns the processor time that has elapsed since the job was started. 
<b>Time Function:</b> char *ctime(const time_t *<i>time</i>); | <b>Time function</b> used to converts time to a character string. 
<b>Time Function:</b> char *ctime64(const time64_t *<i>time</i>); | <b>Time function</b> used to converts time to a character string. 
<b>Time Function:</b> char *ctime_r(const time_t *time, char *buf); | <b>Time function</b> used to converts time to a character string. (Restartable version of ctime.) 
<b>Time Function:</b> char *ctime64_r(const time64_t *time, char *buf); | <b>Time function</b> used to converts time to a character string. (Restartable version of ctime64.) 
<b>Time Function:</b> double difftime(time_t <i>time2</i>, time_t <i>time1</i>); | <b>Time function</b> used to computes the difference between time2 and time1. 
<b>Time Function:</b> double difftime64(time64_t <i>time2</i>, time64_t <i>time1</i>); | <b>Time function</b> used to computes the difference between time2 and time1. 
<b>Time Function:</b> struct tm *gmtime(const time_t *<i>time</i>); | <b>Time function</b> used to converts a time value to a structure of type tm. 
<b>Time Function:</b> struct tm *gmtime64(const time64_t *<i>time</i>); | <b>Time function</b> used to converts a time value to a structure of type tm. 
<b>Time Function:</b> struct tm *gmtime_r (const time_t *time, struct tm *result); | <b>Time function</b> used to converts a time value to a structure of type tm. (Restartable version of gmtime.) 
<b>Time Function:</b> struct tm *gmtime64_r (const time64_t *time, struct tm *result); | <b>Time function</b> used to converts a time value to a structure of type tm. (Restartable version of gmtime64.) 
<b>Time Function:</b> struct tm *localtime(const time_t *<i>timeval</i>); | <b>Time function</b> used to converts timeval to a structure of type tm. 
<b>Time Function:</b> struct tm *localtime64(const time64_t *<i>timeval</i>); | <b>Time function</b> used to converts timeval to a structure of type tm. 
<b>Time Function:</b> struct tm *localtime_r (const time_t *timeval, struct tm *result); | <b>Time function</b> used to converts a time value to a structure of type tm. (Restartable version of localtime.) 
<b>Time Function:</b> struct tm *localtime64_r (const time64_t *timeval, struct tm *result); | <b>Time function</b> used to converts a time value to a structure of type tm. (Restartable version of localtime64.) 
<b>Time Function:</b> time_t mktime(struct tm *<i>time</i>); | <b>Time function</b> used to converts local time into calendar time. 
<b>Time Function:</b> time64_t mktime64(struct tm *<i>time</i>); | <b>Time function</b> used to converts local time into calendar time. 
<b>Time Function:</b> size_t strftime (char *<i>dest</i>, size_t <i>maxsize</i>, const char *<i>format</i>, const struct tm *<i>timeptr</i>); | <b>Time function</b> used to stores characters in an array pointed to by dest, according to the string determined by format. 
<b>Time Function:</b> char *strptime (const char *buf, const char *format, struct tm *tm); | <b>Time function</b> used to date and time conversion 
<b>Time Function:</b> time_t time(time_t *<i>timeptr</i>); | <b>Time function</b> used to returns the current calendar time. 
<b>Time Function:</b> time64_t time64(time64_t *<i>timeptr</i>); | <b>Time function</b> used to returns the current calendar time. 
