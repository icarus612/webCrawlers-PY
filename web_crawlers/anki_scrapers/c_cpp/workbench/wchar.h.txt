<b>Standard Library Function:</b> wint_t getwchar(void); | <b>Standard library function</b> used to reads the next multibyte character
from stdin, converts it to a wide character, and advances the associated
file position indicator for stdin.. 
<b>Standard Library Function:</b> int mbrlen (const char *s, size_t
n, mbstate_t *ps); | <b>Standard library function</b> used to determines the length of a multibyte
character. (Restartable version of mblen.). 
<b>Standard Library Function:</b> int mbrtowc (wchar_t *pwc, const
char *s, size_t n, mbstate_t *ps); | <b>Standard library function</b> used to convert a multibyte character to
a wide character (Restartable version of mbtowc.). 
<b>Standard Library Function:</b> int mbsinit (const mbstate_t *ps); | <b>Standard library function</b> used to test state object *ps for
initial state.. 
<b>Standard Library Function:</b> size_t mbsrtowc (wchar_t *dst, const
char **src, size_t len, mbstate_t *ps); | <b>Standard library function</b> used to convert multibyte string to a wide
character string. (Restartable version of mbstowcs.). 
<b>Standard Library Function:</b> wint_t putwchar(wchar_t wc); | <b>Standard library function</b> used to converts the wide character wc to
a multibyte character and writes it to stdout.. 
<b>Standard Library Function:</b> int strfmon (char *s, size_t maxsize,
const char *format, ...); | <b>Standard library function</b> used to converts monetary value to string.. 
<b>Standard Library Function:</b> int swprintf(wchar_t *wcsbuffer,
size_t n, const wchar_t *format,  arg-list); | <b>Standard library function</b> used to formats and stores a series of wide
characters and values into the wide-character buffer wcsbuffer.. 
<b>Standard Library Function:</b> int swscanf (const wchar_t *buffer,
const wchar_t *format, arg-list) | <b>Standard library function</b> used to reads data from buffer into
the locations given by arg-list.. 
<b>Standard Library Function:</b> int wcrtomb (char *s, wchar_t wchar,
mbstate_t *pss); | <b>Standard library function</b> used to converts a wide character to a multibyte
character. (Restartable version of wctomb.). 
<b>Standard Library Function:</b> wchar_t *wcscat(wchar_t  *string1,
const wchar_t  *string2); | <b>Standard library function</b> used to appends a copy of the string pointed
to by string2 to the end of the string pointed to by string1.. 
<b>Standard Library Function:</b> wchar_t *wcschr(const wchar_t  *string,
wchar_t  character); | <b>Standard library function</b> used to searches the wide-character string
pointed to by string for the occurrence of character.. 
<b>Standard Library Function:</b> int wcscmp(const wchar_t  *string1,
const wchar_t  *string2); | <b>Standard library function</b> used to compares two wide-character strings, *string1 and *string2.. 
<b>Standard Library Function:</b> int wcscoll (const wchar_t *wcs1,
const wchar_t *wcs2); | <b>Standard library function</b> used to compares two wide-character strings
using the collating sequence in the current locale.. 
<b>Standard Library Function:</b> wchar_t *wcscpy(wchar_t  *string1,
const wchar_t  *string2); | <b>Standard library function</b> used to copies the contents of *string2 (including
the ending wchar_t  null character) into *string1.. 
<b>Standard Library Function:</b> size_t wcscspn(const wchar_t  *string1,
const wchar_t  *string2); | <b>Standard library function</b> used to determines the number of wchar_t
 characters in the initial segment of the string pointed to by *string1 that
do not appear in the string pointed to by *string2.. 
<b>Standard Library Function:</b> size_t wcsftime(wchar_t *wdest,
size_t maxsize, const wchar_t *format,  const struct
tm *timeptr); | <b>Standard library function</b> used to converts the time and date specification
in the timeptr structure into a wide-character string.. 
<b>Standard Library Function:</b> size_t wcslen(const wchar_t  *string); | <b>Standard library function</b> used to computes the number of wide-characters
in the string pointed to by string.. 
<b>Standard Library Function:</b> wchar_t *wcsncat(wchar_t  *string1,
const wchar_t  *string2, size_t count); | <b>Standard library function</b> used to appends up to count wide characters
from string2 to the end of string1, and appends a wchar_t
null character to the result.. 
<b>Standard Library Function:</b> int wcsncmp(const wchar_t  *string1,
const wchar_t  *string2, size_t count); | <b>Standard library function</b> used to compares up to count wide
characters in string1 to  string2.. 
<b>Standard Library Function:</b> wchar_t *wcsncpy(wchar_t  *string1,
const wchar_t  *string2, size_t count); | <b>Standard library function</b> used to copies up to count wide characters
from string2 to  string1.. 
<b>Standard Library Function:</b> wchar_t *wcspbrk(const wchar_t  *string1,
const wchar_t  *string2); | <b>Standard library function</b> used to locates the first occurrence in the
string pointed to by string1 of any wide characters from the
string pointed to by string2.. 
<b>Standard Library Function:</b> wchar_t *wcsptime ( const wchar_t
*buf, const wchar_t *format, struct tm *tm ); | <b>Standard library function</b> used to date and time conversion. Equivalent
to strptime(), except that it uses wide characters.. 
<b>Standard Library Function:</b> wchar_t *wcsrchr(const wchar_t  *string,
wchar_t  character); | <b>Standard library function</b> used to locates the last occurrence of  character in
the string pointed to by string.. 
<b>Standard Library Function:</b> size_t wcsrtombs (char *dst, const
wchar_t **src, size_t len, mbstate_t *ps); | <b>Standard library function</b> used to converts wide character string to
multibyte string. (Restartable version of wcstombs.). 
<b>Standard Library Function:</b> size_t wcsspn(const wchar_t *string1,
const wchar_t *string2); | <b>Standard library function</b> used to computes the number of wide characters
in the initial segment of the string pointed to by string1,
which consists entirely of wide characters from the string pointed
to by string2.. 
<b>Standard Library Function:</b> wchar_t *wcsstr(const wchar_t *wcs1,
const wchar_t *wcs2); | <b>Standard library function</b> used to locates the first occurrence of wcs2 
in wcs1.. 
<b>Standard Library Function:</b> double wcstod(const wchar_t *nptr,
wchar_t **endptr); | <b>Standard library function</b> used to converts the initial portion of the
wide-character string pointed to by nptr to a double value.. 
<b>Standard Library Function:</b> _Decimal32 wcstod32(const wchar_t *nptr,
wchar_t **endptr); | <b>Standard library function</b> used to converts the initial portion of the
wide-character string pointed to by nptr to a single-precision
decimal floating-point value.. 
<b>Standard Library Function:</b> _Decimal64 wcstod64(const wchar_t *nptr,
wchar_t **endptr); | <b>Standard library function</b> used to converts the initial portion of the
wide-character string pointed to by nptr to a double-precision
decimal floating-point value.. 
<b>Standard Library Function:</b> _Decimal128 wcstod128(const wchar_t *nptr,
wchar_t **endptr); | <b>Standard library function</b> used to converts the initial portion of
the wide-character string pointed to by nptr to a quad-precision
decimal floating-point value.. 
<b>Standard Library Function:</b> float wcstof(const wchar_t *nptr,
wchar_t **endptr); | <b>Standard library function</b> used to converts the initial portion of the
wide-character string pointed to by nptr to a float value.. 
<b>Standard Library Function:</b> wchar_t *wcstok(wchar_t *wcs1,
const wchar_t *wcs2, wchar_t **ptr) | <b>Standard library function</b> used to breaks wcs1 into a sequence
of tokens, each of which is delimited by a wide character from the
wide string pointed to by wcs2.. 
<b>Standard Library Function:</b> long int wcstol(const wchar_t *nptr,
wchar_t **endptr, int base); | <b>Standard library function</b> used to converts the initial portion of
the wide-character string pointed to by nptr to a long integer
value.. 
<b>Standard Library Function:</b> long double wcstold(const wchar_t *nptr,
wchar_t **endptr); | <b>Standard library function</b> used to converts the initial portion of the
wide-character string pointed to by nptr to a long double value.. 
<b>Standard Library Function:</b> unsigned long int wcstoul(const wchar_t
 *nptr, wchar_t **endptr, int  base); | <b>Standard library function</b> used to converts the initial portion of the
wide-character string pointed to by nptr to an unsigned long
integer value.. 
<b>Standard Library Function:</b> size_t wcsxfrm (wchar_t *wcs1,
const wchar_t *wcs2, size_t n); | <b>Standard library function</b> used to transforms a wide-character string
to values which represent character collating weights and places the
resulting wide-character string into an array.. 
<b>Standard Library Function:</b> wctype_t wctype (const char  *property); | <b>Standard library function</b> used to obtains handle for character property
classification.. 
<b>Standard Library Function:</b> int wcswidth(const wchar_t   *pwcs,
size_t n); | <b>Standard library function</b> used to determine the display width of a
wide character string.. 
<b>Standard Library Function:</b> wchar_t *wmemchr(const wchar_t *s,
wchar_t c, size_t n); | <b>Standard library function</b> used to locates the first occurrence of c in
the initial n wide characters of the object pointed to by  s.. 
<b>Standard Library Function:</b> int wmemcmp(const wchar_t *s1,
const wchar_t *s2, size_t n); | <b>Standard library function</b> used to compares the first n wide
characters of the object pointed to by s1 to the first  n characters
of the object pointed to by s2.. 
<b>Standard Library Function:</b> wchar_t *wmemcpy(wchar_t *s1,
const wchar_t *s2, size_t n); | <b>Standard library function</b> used to copies n wide characters from
the object pointed to by s2 to the object pointed to by  s1.. 
<b>Standard Library Function:</b> wchar_t *wmemmove(wchar_t *s1,
const wchar_t *s2, size_t n); | <b>Standard library function</b> used to copies n wide characters from
the object pointed to by s2 to the object pointed to by  s1.. 
<b>Standard Library Function:</b> wchar_t *wmemset(wchar_t *s,
wchar_t c, size_t n); | <b>Standard library function</b> used to copies the value of c into
each of the first n wide characters of the object pointed to
by s.. 
<b>Standard Library Function:</b> int wprintf(const wchar_t  *format,
 arg-list); | <b>Standard library function</b> used to equivalent to fwprintf with the argument
stdout interposed before the arguments to wprintf.. 
<b>Standard Library Function:</b> int wscanf(const wchar_t  *format,
 arg-list); | <b>Standard library function</b> used to equivalent to fwscanf with the argument
stdin interposed before the arguments of wscanf.. 
