<b>Standard Library Function:</b> ['*memchr(const', 'int', 'size_t'] | <b>Standard library function</b> used to searches the first count bytes of buf for the first occurrence of c converted to an unsigned character.. | void *memchr(const void *buf, int c, size_t count); 
<b>Standard Library Function:</b> ['memcmp(const', 'const', 'size_t'] | <b>Standard library function</b> used to compares up to count bytes of buf1 and buf2.. | int memcmp(const void *buf1, const void *buf2, size_t count); 
<b>Standard Library Function:</b> ['*memcpy(void', 'const', 'size_t'] | <b>Standard library function</b> used to copies count bytes of src to dest.. | void *memcpy(void *dest, const void *src, size_t count); 
<b>Standard Library Function:</b> ['*memmove(void', 'const', 'size_t'] | <b>Standard library function</b> used to copies count bytes of src to dest.  Allows copying between objects that overlap.. | void *memmove(void *dest, const void *src, size_t count); 
<b>Standard Library Function:</b> ['*memset(void', 'int', 'size_t'] | <b>Standard library function</b> used to sets count bytes of dest to a value c.. | void *memset(void *dest, int c, size_t count); 
<b>Standard Library Function:</b> ['*strcat(char', 'const'] | <b>Standard library function</b> used to concatenates string2 to string1.. | char *strcat(char *string1, const char *string2); 
<b>Standard Library Function:</b> ['*strchr(const', 'int'] | <b>Standard library function</b> used to locates the first occurrence of c in string.. | char *strchr(const char *string, int c); 
<b>Standard Library Function:</b> ['strcmp(const', 'const'] | <b>Standard library function</b> used to compares the value of string1 to string2.. | int strcmp(const char *string1, const char *string2); 
<b>Standard Library Function:</b> ['strcoll(const', 'const'] | <b>Standard library function</b> used to compares two strings using the collating sequence in the current locale.. | int strcoll(const char *string1, const char *string2); 
<b>Standard Library Function:</b> ['*strcpy(char', 'const'] | <b>Standard library function</b> used to copies string2 into string1.. | char *strcpy(char *string1, const char *string2); 
<b>Standard Library Function:</b> ['strcspn(const', 'const'] | <b>Standard library function</b> used to returns the length of the initial substring of string1 consisting of characters not contained in string2.. | size_t strcspn(const char *string1, const char *string2); 
<b>Standard Library Function:</b> ['*strerror(int'] | <b>Standard library function</b> used to maps the error number in errnum to an error message string.. | char *strerror(int errnum); 
<b>Standard Library Function:</b> ['strlen(const'] | <b>Standard library function</b> used to calculates the length of string.. | size_t strlen(const char *string); 
<b>Standard Library Function:</b> ['*strncat(char', 'const', 'size_t'] | <b>Standard library function</b> used to concatenates up to count characters of string2 to string1.. | char *strncat(char *string1, const char *string2, size_t count); 
<b>Standard Library Function:</b> ['strncmp(const', 'const', 'size_t'] | <b>Standard library function</b> used to compares up to count characters of string1 and string2.. | int strncmp(const char *string1, const char *string2, size_t count); 
<b>Standard Library Function:</b> ['*strncpy(char', 'const', 'size_t'] | <b>Standard library function</b> used to copies up to count characters of string2 to string1.. | char *strncpy(char *string1, const char *string2, size_t count); 
<b>Standard Library Function:</b> ['*strpbrk(const', 'const'] | <b>Standard library function</b> used to locates the first occurrence in string1 of any character in string2.. | char *strpbrk(const char *string1, const char *string2); 
<b>Standard Library Function:</b> ['*strrchr(const', 'int'] | <b>Standard library function</b> used to locates the last occurrence of c in string.. | char *strrchr(const char *string, int c); 
<b>Standard Library Function:</b> ['strspn(const', 'const'] | <b>Standard library function</b> used to returns the length of the initial substring of string1 consisting of characters contained in string2.. | size_t strspn(const char *string1, const char *string2); 
<b>Standard Library Function:</b> ['*strstr(const', 'const'] | <b>Standard library function</b> used to returns a pointer to the first occurrence of string2 in string1.. | char *strstr(const char *string1, const char *string2); 
<b>Standard Library Function:</b> ['*strtok(char', 'const'] | <b>Standard library function</b> used to locates the next token in string1 delimited by the next character in string2.. | char *strtok(char *string1, const char *string2); 
<b>Standard Library Function:</b> ['*strtok_r(char', 'const', 'char'] | <b>Standard library function</b> used to locates the next token in string delimited by the next character in seps. (Restartable version of strtok.). | char *strtok_r(char *string, const char *seps, char **lasts); 
<b>Standard Library Function:</b> ['strxfrm(char', 'const', 'size_t'] | <b>Standard library function</b> used to converts string2 and places the result in string1. The conversion is determined by the program's current locale.. | size_t strxfrm(char *string1, const char *string2, size_t count); 
