<b>Stdio Function:</b> wint_t btowc(int <i>c</i>); | <b>Stdio function</b> used to determines whether c constitues a valid multibyte character in the initial shift state. 
<b>Stdio Function:</b> void clearerr(FILE *<i>stream</i>); | <b>Stdio function</b> used to resets the error indicators and the end-of-file indicator for stream. 
<b>Stdio Function:</b> int fclose(FILE *<i>stream</i>); | <b>Stdio function</b> used to closes the specified stream. 
<b>Stdio Function:</b> FILE *fdopen(int <span class="ph synph"><span class="ph var">handle</span></span>, const char <span class="ph synph"><span class="ph var">*type</span></span>); | <b>Stdio function</b> used to associates an input or output stream with the file identified by handle. 
<b>Stdio Function:</b> int feof(FILE *<i>stream</i>); | <b>Stdio function</b> used to tests whether the end-of-file flag is set for a given stream. 
<b>Stdio Function:</b> int ferror(FILE *<i>stream</i>); | <b>Stdio function</b> used to tests for an error indicator in reading from or writing to stream. 
<b>Stdio Function:</b> int fflush(FILE *<i>stream</i>); | <b>Stdio function</b> used to writes the contents of the buffer associated with the output stream. 
<b>Stdio Function:</b> int fgetc(FILE *<i>stream</i>); | <b>Stdio function</b> used to reads a single unsigned character from the input stream. 
<b>Stdio Function:</b> int fgetpos(FILE *<i>stream</i>, fpos_t *<i>pos</i>); | <b>Stdio function</b> used to stores the current position of the file pointer associated with stream into the object pointed to by pos. 
<b>Stdio Function:</b> char *fgets(char *<i>string</i>, int <i>n</i>, FILE *<i>stream</i>); | <b>Stdio function</b> used to reads a string from the input stream. 
<b>Stdio Function:</b> wint_t fgetwc(FILE *<i>stream</i>); | <b>Stdio function</b> used to reads the next multibyte character from the input stream pointed to by stream.  
<b>Stdio Function:</b> wchar_t *fgetws(wchar_t *<i>wcs</i>,  int <i>n</i>, FILE *<i>stream</i>); | <b>Stdio function</b> used to reads wide characters from the stream into the array pointed to by wcs. 
<b>Stdio Function:</b> int fileno(FILE <span class="ph synph"><span class="ph var">*stream</span></span>); | <b>Stdio function</b> used to determines the file handle currently associated with stream. 
<b>Stdio Function:</b> FILE *fopen(const char *<i>filename</i>, const char *<i>mode</i>); | <b>Stdio function</b> used to opens the specified file. 
<b>Stdio Function:</b> int fprintf(FILE *<i>stream</i>, const char *<i>format-string</i>, <i>arg-list</i>); | <b>Stdio function</b> used to formats and prints characters and values to the output stream. 
<b>Stdio Function:</b> int fputc(int <i>c</i>, FILE *<i>stream</i>); | <b>Stdio function</b> used to prints a character to the output stream. 
<b>Stdio Function:</b> int fputs(const char *<i>string</i>, FILE *<i>stream</i>); | <b>Stdio function</b> used to copies a string to the output stream. 
<b>Stdio Function:</b> wint_t fputwc(wchar_t <i>wc</i>,  FILE <i>*stream</i>); | <b>Stdio function</b> used to converts the wide character wc to a multibyte character and writes it to the output stream pointed to by  stream at the current position. 
<b>Stdio Function:</b> int fputws(const wchar_t *<i>wcs</i>, FILE  <i>*stream</i>); | <b>Stdio function</b> used to converts the wide-character string wcs to a multibyte-character string and writes it to stream as a multibyte character string. 
<b>Stdio Function:</b> size_t fread(void *<i>buffer</i>, size_t <i>size</i>, size_t <i>count</i>, FILE *<i>stream</i>); | <b>Stdio function</b> used to reads up to count items of size length from the input stream, and stores them in buffer. 
<b>Stdio Function:</b> FILE *freopen(const char *<i>filename</i>, const char *<i>mode</i>, FILE *<i>stream</i>); | <b>Stdio function</b> used to closes stream, and reassigns it to the file specified. 
<b>Stdio Function:</b> int fscanf(FILE *<i>stream</i>, const char *<i>format-string</i>, <i>arg-list</i>); | <b>Stdio function</b> used to reads data from stream into locations given by arg-list. 
<b>Stdio Function:</b> int fseek(FILE *<i>stream</i>, long int <i>offset</i>, int <i>origin</i>); | <b>Stdio function</b> used to changes the current file position associated with stream to a new location. 
<b>Stdio Function:</b> int fsetpos(FILE *<i>stream</i>, const fpos_t *<i>pos</i>); | <b>Stdio function</b> used to moves the current file position to a new location determined by pos. 
<b>Stdio Function:</b> long int ftell(FILE *<i>stream</i>); | <b>Stdio function</b> used to gets the current position of the file pointer. 
<b>Stdio Function:</b> int fwide(FILE <i>*stream</i>, int <i>mode</i>); | <b>Stdio function</b> used to determines the orientation of the stream pointed to by stream. 
<b>Stdio Function:</b> int fwprintf(FILE <i>*stream</i>, const wchar_t <i>*format</i>, <i>arg-list</i>); | <b>Stdio function</b> used to writes output to the stream pointed to by stream. 
<b>Stdio Function:</b> size_t fwrite(const void *<i>buffer</i>, size_t <i>size</i>,size_t <i>count</i>, FILE *<i>stream</i>); | <b>Stdio function</b> used to writes up to count items of size length from buffer to stream. 
<b>Stdio Function:</b> int fwscanf(FILE <i>*stream</i>, const wchar_t <i>*format</i>, <i>arg-list</i>) | <b>Stdio function</b> used to reads input from the stream pointed to by stream. 
<b>Stdio Function:</b> int getc(FILE *<i>stream</i>); | <b>Stdio function</b> used to reads a single character from the input stream. 
<b>Stdio Function:</b> int getchar(void); | <b>Stdio function</b> used to reads a single character from stdin. 
<b>Stdio Function:</b> char *gets(char *<i>buffer</i>); | <b>Stdio function</b> used to reads a string from stdin, and stores it in buffer. 
<b>Stdio Function:</b> wint_t getwc(FILE <i>*stream</i>); | <b>Stdio function</b> used to reads the next multibyte character from  stream, converts it to a wide character and advances the associated file position indicator for stream. 
<b>Stdio Function:</b> void perror(const char *<i>string</i>); | <b>Stdio function</b> used to prints an error message to stderr. 
<b>Stdio Function:</b> int printf(const char *<i>format-string</i>, <i>arg-list</i>); | <b>Stdio function</b> used to formats and prints characters and values to stdout. 
<b>Stdio Function:</b> int putc(int <i>c</i>, FILE *<i>stream</i>); | <b>Stdio function</b> used to prints c to the output stream. 
<b>Stdio Function:</b> int putchar(int <i>c</i>); | <b>Stdio function</b> used to prints c to stdout. 
<b>Stdio Function:</b> int puts(const char *<i>string</i>); | <b>Stdio function</b> used to prints a string to stdout. 
<b>Stdio Function:</b> wint_t putwchar(wchar_t <i>wc</i>,  FILE <i>*stream</i>); | <b>Stdio function</b> used to converts the wide character wc to a multibyte character, and writes it to the stream at the current position. 
<b>Stdio Function:</b> int remove(const char *<i>filename</i>); | <b>Stdio function</b> used to deletes the file specified by filename. 
<b>Stdio Function:</b> int rename(const char *<i>oldname</i>, const char *<i>newname</i>); | <b>Stdio function</b> used to renames the specified file. 
<b>Stdio Function:</b> void rewind(FILE *<i>stream</i>); | <b>Stdio function</b> used to repositions the file pointer associated with stream to the beginning of the file. 
<b>Stdio Function:</b> int scanf(const char *<i>format-string</i>, <i>arg-list</i>); | <b>Stdio function</b> used to reads data from stdin into locations given by arg-list. 
<b>Stdio Function:</b> void setbuf(FILE *<i>stream</i>, char *<i>buffer</i>); | <b>Stdio function</b> used to controls buffering for stream. 
<b>Stdio Function:</b> int setvbuf(FILE *<i>stream</i>, char *<i>buf</i>, int <i>type</i>, size_t <i>size</i>); | <b>Stdio function</b> used to controls buffering and buffer size for stream. 
<b>Stdio Function:</b> int snprintf(char *outbuf, size_t n, const char*, ...) | <b>Stdio function</b> used to same as sprintf except that the function will stop after n characters have been written to outbuf. 
<b>Stdio Function:</b> int sprintf(char *<i>buffer</i>, const char *<i>format-string</i>, <i>arg-list</i>); | <b>Stdio function</b> used to formats and stores characters and values in buffer. 
<b>Stdio Function:</b> int sscanf(const char *<i>buffer</i>, const char *<i>format</i>, <i>arg-list</i>); | <b>Stdio function</b> used to reads data from buffer into the locations given by arg-list. 
<b>Stdio Function:</b> FILE *tmpfile(void); | <b>Stdio function</b> used to creates a temporary binary file and opens it. 
<b>Stdio Function:</b> char *tmpnam(char *<i>string</i>); | <b>Stdio function</b> used to generates a temporary file name. 
<b>Stdio Function:</b> int ungetc(int <i>c</i>, FILE *<i>stream</i>); | <b>Stdio function</b> used to pushes c back onto the input stream. 
<b>Stdio Function:</b> wint_t ungetwc(wint_t <i>wc</i>, FILE <i>*stream</i>); | <b>Stdio function</b> used to pushes the wide character wc back onto the input stream. 
<b>Stdio Function:</b> int vfprintf(FILE *<i>stream</i>, const char *<i>format</i>, <i>va_list arg_ptr</i>); | <b>Stdio function</b> used to formats and prints characters to the output stream using a variable number of arguments. 
<b>Stdio Function:</b> int vfscanf(FILE <i>*stream</i>, const char <i>*format</i>, va_list <i>arg_ptr</i>); | <b>Stdio function</b> used to reads data from a specified stream into locations given by a variable number of arguments. 
<b>Stdio Function:</b> int vfwprintf(FILE <i>*stream</i>, const wchar_t <i>*format</i>, <i>va_list arg</i>); | <b>Stdio function</b> used to equivalent to fwprintf, except that the variable argument list is replaced by arg. 
<b>Stdio Function:</b> int vfwscanf(FILE <i>*stream</i>, const wchar_t <i>*format</i>, <i>va_list arg_ptr</i>); | <b>Stdio function</b> used to reads wide data from a specified stream into locations given by a variable number of arguments. 
<b>Stdio Function:</b> int vprintf(const char *<i>format</i>, va_list <i>arg_ptr</i>); | <b>Stdio function</b> used to formats and prints characters to stdout using a variable number of arguments. 
<b>Stdio Function:</b> int vscanf(const char <i>*format</i>, <i>va_list arg_ptr</i>); | <b>Stdio function</b> used to reads data from stdin into locations given by a variable number of arguments. 
<b>Stdio Function:</b> int vsprintf(char *<i>target-string</i>, const char *<i>format</i>, va_list <i>arg_ptr</i>); | <b>Stdio function</b> used to formats and stores characters in a buffer using a variable number of arguments. 
<b>Stdio Function:</b> int vsnprintf(char *outbuf, size_t n, const char*, va_list); | <b>Stdio function</b> used to same as vsprintf except that the function will stop after n characters have been written to outbuf. 
<b>Stdio Function:</b> int vsscanf(const char<i>*buffer</i>, const char <i>*format</i>, <i>va_list arg_ptr</i>); | <b>Stdio function</b> used to reads data from a buffer into locations given by a variable number of arguments. 
<b>Stdio Function:</b> int vswscanf(const wchar_t <i>*buffer</i>, const wchar_t <i>*format</i>, <i>va_list arg_ptr</i>); | <b>Stdio function</b> used to reads wide data from a buffer into locations given by a variable number of arguments. 
<b>Stdio Function:</b> int vwscanf(const wchar_t <i>*format</i>, <i>va_list arg_ptr</i>); | <b>Stdio function</b> used to reads wide data from stdin into locations given by a variable number of arguments. 
