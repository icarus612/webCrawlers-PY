<b>Standard Library Function:</b> double acos(double x); | <b>Standard library function</b> used to calculates the arc cosine of x.. 
<b>Standard Library Function:</b> double asin(double x); | <b>Standard library function</b> used to calculates the arc sine of x.. 
<b>Standard Library Function:</b> double atan(double x); | <b>Standard library function</b> used to calculates the arc tangent of x.. 
<b>Standard Library Function:</b> double atan2(double y, double x); | <b>Standard library function</b> used to calculates the arc tangent of y/x.. 
<b>Standard Library Function:</b> double ceil(double x); | <b>Standard library function</b> used to calculates the double value representing
the smallest integer that is greater than or equal to x.. 
<b>Standard Library Function:</b> double cos(double x); | <b>Standard library function</b> used to calculates the cosine of x.. 
<b>Standard Library Function:</b> double cosh(double x); | <b>Standard library function</b> used to calculates the hyperbolic cosine
of x.. 
<b>Standard Library Function:</b> double erf(double x); | <b>Standard library function</b> used to calculates the error function of
 x.. 
<b>Standard Library Function:</b> double erfc(double x); | <b>Standard library function</b> used to calculates the error function for
large values of x.. 
<b>Standard Library Function:</b> double exp(double x); | <b>Standard library function</b> used to calculates the exponential function
of a floating-point argument x.. 
<b>Standard Library Function:</b> double fabs(double x); | <b>Standard library function</b> used to calculates the absolute value of
a floating-point argument x.. 
<b>Standard Library Function:</b> double floor(double x); | <b>Standard library function</b> used to calculates the floating-point value
representing the largest integer less than or equal to x.. 
<b>Standard Library Function:</b> double fmod(double x, double y); | <b>Standard library function</b> used to calculates the floating-point remainder
of x/y.. 
<b>Standard Library Function:</b> double frexp(double x, int
*expptr); | <b>Standard library function</b> used to separates a floating-point number
into its mantissa and exponent.. 
<b>Standard Library Function:</b> double gamma(double x); | <b>Standard library function</b> used to computes the Gamma Function. 
<b>Standard Library Function:</b> double hypot(double side1,
double side2); | <b>Standard library function</b> used to calculates the hypotenuse of a right-angled
triangle with sides of length side1 and side2.. 
<b>Standard Library Function:</b> double j0(double x); | <b>Standard library function</b> used to calculates the Bessel function value
of the first kind of order 0.. 
<b>Standard Library Function:</b> double j1(double x); | <b>Standard library function</b> used to calculates the Bessel function value
of the first kind of order 1.. 
<b>Standard Library Function:</b> double jn(int n, double x); | <b>Standard library function</b> used to calculates the Bessel function value
of the first kind of order n.. 
<b>Standard Library Function:</b> double ldexp(double x, int exp); | <b>Standard library function</b> used to returns the value of x multiplied
by (2 to the power of exp).. 
<b>Standard Library Function:</b> double log(double x); | <b>Standard library function</b> used to calculates the natural logarithm
of x.. 
<b>Standard Library Function:</b> double log10(double x); | <b>Standard library function</b> used to calculates the base 10 logarithm
of x.. 
<b>Standard Library Function:</b> double modf(double x, double
*intptr); | <b>Standard library function</b> used to breaks down the floating-point value x into
fractional and integral parts.. 
<b>Standard Library Function:</b> double nextafter(double x,
double y); | <b>Standard library function</b> used to calculates the next representable
value after x in the direction of y.. 
<b>Standard Library Function:</b> long double nextafterl(long double x,
long double y); | <b>Standard library function</b> used to calculates the next representable
value after x in the direction of y.. 
<b>Standard Library Function:</b> double nexttoward(double x,
long double y); | <b>Standard library function</b> used to calculates the next representable
value after x in the direction of y.. 
<b>Standard Library Function:</b> long double nexttowardl(long double x,
long double y); | <b>Standard library function</b> used to calculates the next representable
value after x in the direction of y.. 
<b>Standard Library Function:</b> double pow(double x, double y); | <b>Standard library function</b> used to calculates the value x to
the power y.. 
<b>Standard Library Function:</b> _Decimal32 quantized32(_Decimal32 x,
_Decimal32 y); | <b>Standard library function</b> used to compute the quantum exponent of
a single-precision decimal floating-point value.. 
<b>Standard Library Function:</b> _Decimal64 quantized64(_Decimal64 x,
_Decimal64 y); | <b>Standard library function</b> used to compute the quantum exponent of
a double-precision decimal floating-point value.. 
<b>Standard Library Function:</b> _Decimal128 quantized128(_Decimal128 x,
_Decimal128 y); | <b>Standard library function</b> used to compute the quantum exponent of
a quad-precision decimal floating-point value.. 
<b>Standard Library Function:</b> int quantexpd32(_Decimal32 x); | <b>Standard library function</b> used to set the quantum exponent of a single-precision
decimal floating-point value to the quantum exponent of another single-precision
decimal floating-point value.. 
<b>Standard Library Function:</b> int quantexpd64(_Decimal64 x); | <b>Standard library function</b> used to set the quantum exponent of a double-precision
decimal floating-point value to the quantum exponent of another double-precision
decimal floating-point value.. 
<b>Standard Library Function:</b> int quantexpd128(_Decimal128 x); | <b>Standard library function</b> used to set the quantum exponent of a quad-precision
decimal floating-point value to the quantum exponent of another quad-precision
decimal floating-point value.. 
<b>Standard Library Function:</b> __bool__ samequantumd32(_Decimal32 x,
_Decimal32 y); | <b>Standard library function</b> used to determine if the quantum exponents
of two single-precision decimal floating-point values are the same.. 
<b>Standard Library Function:</b> __bool__ samequantumd64(_Decimal64 x,
_Decimal64 y); | <b>Standard library function</b> used to determine if the quantum exponents
of two double-precision decimal floating-point values are the same.. 
<b>Standard Library Function:</b> __bool__ samequantumd128(_Decimal128 x,
_Decimal128 y); | <b>Standard library function</b> used to determine if the quantum exponents
of two quad-precision decimal floating-point values are the same.. 
<b>Standard Library Function:</b> double sin(double x); | <b>Standard library function</b> used to calculates the sine of x.. 
<b>Standard Library Function:</b> double sinh(double x); | <b>Standard library function</b> used to calculates the hyperbolic sine of x.. 
<b>Standard Library Function:</b> double sqrt(double x); | <b>Standard library function</b> used to calculates the square root of x.. 
<b>Standard Library Function:</b> double tan(double x); | <b>Standard library function</b> used to calculates the tangent of x.. 
<b>Standard Library Function:</b> double tanh(double x); | <b>Standard library function</b> used to calculates the hyperbolic tangent
of x.. 
<b>Standard Library Function:</b> double y0(double x); | <b>Standard library function</b> used to calculates the Bessel function value
of the second kind of order 0.. 
<b>Standard Library Function:</b> double y1(double x); | <b>Standard library function</b> used to calculates the Bessel function value
of the second kind of order 1.. 
<b>Standard Library Function:</b> double yn(int n, double x); | <b>Standard library function</b> used to calculates the Bessel function value
of the second kind of order n.. 
